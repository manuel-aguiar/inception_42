# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    TLS.txt                                            :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: marvin <marvin@student.42.fr>              +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2024/10/21 08:56:16 by marvin            #+#    #+#              #
#    Updated: 2024/10/21 08:56:16 by marvin           ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

TLS -> transport layer security (SSL?)

TLS is built on top of the now deprecated SSL protocol
Most known use is for https (application layer) via port 443


TLS 1.0 appeared in 1999 (RFC 2246) as an upgrade to SSL 3.0

TLS 1.2 -> removal of backward compatibility with SSL 2.0
        -> introduction of SHA-256 as the encrypting algorithm (hence its implementation in nginx)





Authentication
    The server proves its identity by sending a diggital certificate with its public key.
    Client checks if the certificate is not expired and was veryfied by a Certificate Authority
    Domain match

    in corporate VPN contexts, both client and server must proove their identity




Key exchange

    a shared session key that both client and server are aware of and use for encription and decription between each other.

    In TLS 1.2, RSA is used (public/private key). However it can become compromised if decyphered and the session will be compromised

     ECDHE (Elliptic Curve Diffie-Hellman Ephemeral) or DHE (Diffie-Hellman Ephemeral)
        -> these were standardized in TLS 1.3 for key exchange, dropping the RSA private

        since keys are temporary, if one key gets deciphered, past sessions as still protected (by their at-the-time key)



So authentication is about agreeing to a connection while key exchange is about agreeing to the method use for
encripting and decripting the actual messages transmitted between client and server





