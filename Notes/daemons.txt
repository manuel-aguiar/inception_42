# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    daemons.txt                                        :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: marvin <marvin@student.42.fr>              +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2024/10/21 08:59:16 by marvin            #+#    #+#              #
#    Updated: 2024/10/21 08:59:16 by marvin           ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

What is a daemon?

A background process that runs independently of user interaction.
    started automatically at boot time and run until shut-down, unless explicitely stopped.

webserver daemon, database daemon, ssh
    -> if you run a webserver in the background, you don't tie a terminal to it and,
    therefore, you use less resources.


Naming convention, end with "d". ssdh, httpd (apache http server daemon)
daemons may be configured to auto restart to make sure the services are available.


Literally the origin of the word is "demon", as in some background magic working.
    In Windows NT (kernel), the daemon is called kernel.


    via chatgpt, how a program can run as a "daemon" after being called from the terminal:

int main()
{
    pid_t pid = fork();
    if (pid < 0) {
        return -1;
    }

    if (pid > 0) {
        exit(0);
    }

    // Create a new session
    if (setsid() < 0) {
        return -1;
    }

    // Change the working directory
    chdir("/");

    // Redirect standard file descriptors
    freopen("/dev/null", "r", stdin);
    freopen("/dev/null", "w", stdout);
    freopen("/dev/null", "w", stderr);

    // Now run the actual Nginx process
    execve("/path/to/nginx", ...);
    return 0; // doesn0t reach here if execve is successfull
}
